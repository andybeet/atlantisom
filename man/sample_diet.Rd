% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_diet.R
\name{sample_diet}
\alias{sample_diet}
\title{Sample total consumption to create diet composition data}
\usage{
sample_diet(dat, fgs)
}
\arguments{
\item{dat}{A \code{data.frame} containing species (predator), agecl, time.days,
atoutput (diet proportion) and prey species}

\item{fgs}{A data frame created by \code{\link{load_fgs}} that
reads in the csv file containing functional group names, usually
\code{"functionalGroups.csv"}.}
}
\description{
Create sampled diet composition data from the total consumption
   in an Atlantis scenario. Observation error and bias are added.
}
\details{
The function takes diet composition data from an Atlantis scenario
  where the data was read in from Atlantis output using \code{load_diet_comp}.
  It assumes
  One does not need to use these functions to create \code{dat}, rather you must only
  ensure that the structure of \code{dat} is the same.
  Can we give an effN type input to determine sample size and error by group?
  Or scale by biomass?
  Bias is added by setting infrequently consumed (<0.25) prey groups to
  zero at random.
  Error is incorporated into proportional composition entries by
  adding uniform error to true values to half of the observations.
  The function adjusts the remaining diet so each predator diet per time.days
  sums to one.
  The function needs to be generalized to any Atlantis system by
  selecting common species group identifiers to remove from the table.
  Also, more realistic observation error and bias distributions
  could be applied to obtain realistic diet composition data.
  Diriclet Ainsworth et al
}
\examples{
\dontrun{
	d <- system.file("extdata", "SETAS_Example", package = "atlantisom")
	groups <- load_fgs(dir = directory, "Functional_groups.csv")
	groups <- groups[groups$IsTurnedOn > 0, "Name"]
	results <- run_truth(scenario = "outputs",
	dir = d,
	file_fgs = "Functional_groups.csv",
	file_bgm = "Geography.bgm",
	select_groups = groups,
	file_init = "Initial_condition.nc",
	file_biolprm = "Biology.prm",
	file_runprm = "Run_settings.xml",
   file_fish = "Fisheries.csv")

	# rows should each sum to one:
	rowSums(dat[,2:NCOL(dat)])
	dim(dat)

	obsDietComp <- sample_diet(dat)
	dim(obsDietComp)
}
}
\author{
Robert Wildermuth, Sarah Gaichas
}
