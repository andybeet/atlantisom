% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_diet.R
\name{sample_diet}
\alias{sample_diet}
\title{Sample total consumption to create diet composition data}
\usage{
sample_diet(dat, fgs, unidprey = 0, alphamult = 1e+07)
}
\arguments{
\item{dat}{A \code{data.frame} containing species (predator), agecl, time.days,
atoutput (diet proportion) and prey species}

\item{fgs}{A data frame created by \code{\link{load_fgs}} that
reads in the csv file containing functional group names, usually
\code{"functionalGroups.csv"}.}

\item{unidprey}{}
}
\description{
Create sampled diet composition data from the total consumption
   in an Atlantis scenario. Observation error and bias are added.
}
\details{
The function takes diet composition data from an Atlantis scenario
  where the data was read in from Atlantis output using \code{load_diet_comp} or
  \code{load_detailed_diet_comp}.
  One does not need to use these functions to create \code{dat}, rather you must only
  ensure that the structure of \code{dat} is the same.
  The user supplies a parameter \code{unidprey} ranging from 0 to 1 that determines
  bias in sample diet composition. Bias is added by allocating a random portion of
  each group to an "unidentified prey" category. The default \code{unidprey} is 0
  which results in no reallocation of prey to unidentified categories.
  The user supplies a parameter \code{alphamult} that detemines observation error
  for sample diet compostion strays using a dirichlet distribution. The default
  \code{alphamult} is 10000000 which results in minimal observation error in diet
  composition. Lower values of \code{alphamult} increase observation error.
  The function adjusts the remaining diet so each predator diet per agecl (if in
  the input data) and time.days sums to one.
}
\examples{
\dontrun{
	d <- system.file("extdata", "SETAS_Example", package = "atlantisom")
	groups <- load_fgs(dir = directory, "Functional_groups.csv")
	groups <- groups[groups$IsTurnedOn > 0, "Name"]
	results <- run_truth(scenario = "outputs",
	dir = d,
	file_fgs = "Functional_groups.csv",
	file_bgm = "Geography.bgm",
	select_groups = groups,
	file_init = "Initial_condition.nc",
	file_biolprm = "Biology.prm",
	file_runprm = "Run_settings.xml",
   file_fish = "Fisheries.csv")

	# rows should each sum to one:
	rowSums(dat[,2:NCOL(dat)])
	dim(dat)

	obsDietComp <- sample_diet(dat)
	dim(obsDietComp)
}
}
\author{
Robert Wildermuth, Sarah Gaichas
}
